//
//  main.cpp
//  K.Bishops.Extra
//
//  Created by Errol Roberts on 5/18/19.
//  Copyright Â© 2019 Errol Roberts. All rights reserved.
//

#include <iostream>
#include <cmath>
using namespace std;

bool ok(int q[], int c, int n) {
    for(int i = 0; i < c; i++){
        if((q[c]/n - q[i]/n) == abs(q[c]%n - q[i]%n)) return false;
    }    return true;
}

int kbishops(int n, int k) {
    int* q = new int[k];
    q[0] = 0;
    int c = 0, solutions = 0;
    while (c >= 0) {
        ++c;
        if (c == k) {
            ++solutions;
            --c;
        }
        else q[c] = q[c-1];
        while (c >= 0) {
            ++q[c];
            if (q[c] == n * n)
                --c;
            else if (ok(q, c, n))
                break;
        }
    }
    delete[] q;
    return solutions;
}

int main() {
    int n, k;
    while (true) {
        cout << "Enter value of n: ";
        cin >> n;
        if (n == -1)
            break;
        cout << "Enter value of k less than or equal to n: ";
        cin >> k;
        while(k > n){
            cout << endl << "Enter value of k: ";
            cin >> k;
        }
        cout << "number of solutions: " << kbishops(n, k) << "\n";
    }
    return 0;
}
